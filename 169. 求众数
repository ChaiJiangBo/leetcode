/**
 * 
 */
package leetcode.test.chaijb;

import java.util.HashMap;

/**
 * @author Lrving 给定一个大小为 n 的数组，找到其中的众数。众数是指在数组中出现次数大于 ⌊ n/2 ⌋ 的元素。
 *         你可以假设数组是非空的，并且给定的数组总是存在众数
 */
public class Majority {
	public int majorityElement(int[] nums) {
		HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
		for (int i = 0; i < nums.length; i++) {
			if (map.containsKey(nums[i])) {
				map.put(nums[i], map.get(nums[i]) + 1);
			} else {
				map.put(nums[i], 1);
			}
		}
		int result = 0;
		for (java.util.Map.Entry<Integer, Integer> entry : map.entrySet()) {
			if ((int) entry.getValue() > (nums.length / 2)) {
				result = (int) entry.getKey();
			}
		}
		return result;
	}

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		int[] arr = { 2, 2, 1, 1, 1, 2, 2 };
		Majority majority = new Majority();
		int result = majority.majorityElement(arr);
		System.out.println(result);
	}

}
