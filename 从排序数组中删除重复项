/**
 * 
 */
package leetcode.test.chaijb;

/**
 * @author Lrving
 *         https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/1/array/21/
 *         给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。
 *         不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。
 */
public class RemoveDuplicates {

	public int removeDuplicates(int[] nums) {
		int temp;
		int count = 0;
		for (int i = 0; i < nums.length - count - 1; i++) {
			if (nums.length == 1) {
				return 1;
			}
			while ((i + count < nums.length - 2) && nums[i] == nums[i + 1]) {
				for (int j = i + 1; j < nums.length - count; j++) {
					if (j < nums.length - 1) {
						temp = nums[j];
						nums[j] = nums[j + 1];
						nums[j + 1] = temp;
					}
				}
				count++;
				if (i + 2 >= nums.length) {
					break;
				}
			}
			if (nums[i] == nums[i + 1]) {
				count++;
			}
		}
		return nums.length - count;
	}

	/**
	 * 
	 */
	public static void main(String[] args) {
		int[] nums = { 1, 1, 1 };
		// nums 是以“引用”方式传递的。也就是说，不对实参做任何拷贝
		int len = new RemoveDuplicates().removeDuplicates(nums);
		System.out.println("不重复的个数是：" + len);
		// 在函数里修改输入数组对于调用者是可见的。
		// 根据你的函数返回的长度, 它会打印出数组中该长度范围内的所有元素。
		for (int i = 0; i < nums.length; i++) {
			System.out.println(nums[i]);
		}
	}

}
